# Generated by Django 5.0.1 on 2024-02-21 21:09

import api.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.CharField(default=api.models.generate_uuid, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60, unique=True)),
                ('code', models.CharField(default=api.models.generate_uuid, max_length=60)),
                ('phone_number', models.CharField(max_length=13, unique=True, validators=[django.core.validators.MinLengthValidator(13)])),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=api.models.generate_uuid, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.CharField(default=api.models.generate_uuid, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('time', models.DateTimeField(default=api.models.get_time)),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('item', models.CharField(max_length=60, validators=[django.core.validators.MinLengthValidator(1)])),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='api.customer')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
    ]
